{"version":3,"file":"static/js/704.cc1053be.chunk.js","mappings":"iPAIaA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mKAO/B,SAAAC,GAAS,MACE,OADFA,EAANC,SAEHC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6DACCK,EAGH,IACD,SAAAC,GAAS,MACE,OADFA,EAANJ,SAEHC,EAAAA,EAAAA,IAAGI,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6DACCK,EAGH,IAGQG,EAAgBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oIAMnC,SAAAU,GAAA,IAAGC,EAASD,EAATC,UAAS,OACZA,IACAR,EAAAA,EAAAA,IAAGS,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gHACiBW,EAGnB,IAGQN,EAAaR,EAAAA,GAAOgB,GAAEC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,gEACxBe,EAAAA,IAKEC,EAAiBnB,EAAAA,GAAOoB,OAAMC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,uSAIrBe,EAAAA,GAEXA,EAAAA,GAMaA,EAAAA,IAGpB,SAAAI,GAAW,OAAAA,EAARC,WAEHjB,EAAAA,EAAAA,IAAGkB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,mIAIUe,EAAAA,GAGZ,IAGQO,EAAgBzB,EAAAA,GAAOC,IAAGyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,qFAM1BwB,EAAc3B,EAAAA,GAAOoB,OAAMQ,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,yJAMlBe,EAAAA,IAClB,SAAAW,GAAW,OAAAA,EAARN,WAEHjB,EAAAA,EAAAA,IAAGwB,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,+HACmB4B,EAAAA,GAKrB,IACD,SAAAC,GAAW,OAAAA,EAARC,WAEH3B,EAAAA,EAAAA,IAAG4B,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,gEACmBgC,EAAAA,GAErB,I,+HClGQC,EAAcpC,EAAAA,GAAOqC,OAAMnC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sKAElBgC,EAAAA,GAGXjB,EAAAA,IAMEoB,EAAStC,EAAAA,GAAOuC,OAAMhC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,Q,uBCDnC,MAVA,SAAeC,GAA6B,IAA1BoC,EAAOpC,EAAPoC,QAAYC,GAASC,EAAAA,EAAAA,GAAAtC,EAAAuC,GACrC,OACEC,EAAAA,EAAAA,KAACR,GAAWS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKJ,GAAS,IAAAK,SACvBN,EAAQO,KAAI,SAACR,EAAQS,GAAE,OACtBJ,EAAAA,EAAAA,KAACN,EAAM,CAAAQ,SAAWP,GAALS,EAAqB,MAI1C,ECkDMC,EAAc,SAAH7C,GAAsB,IAAhB8C,EAAQ9C,EAAR8C,SACfC,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCd,EAAMgB,EAAA,GAAEE,EAASF,EAAA,GAClBlD,GAASqD,EAAAA,EAAAA,IAAYC,EAAAA,KACZC,EAAAA,EAAAA,MAAPZ,GAOR,OACEa,EAAAA,EAAAA,MAAC9D,EAAS,CAACM,OAAQA,EAAOyC,SAAA,EACxBF,EAAAA,EAAAA,KAACpC,EAAU,CAAAsC,SAAC,+CACZe,EAAAA,EAAAA,MAAClD,EAAa,CAAAmC,SAAA,EACZF,EAAAA,EAAAA,KAACkB,EAAM,CACLC,MAAOxB,EACPyB,SAAU,SAACC,GAAC,OAAKR,EAAUQ,EAAEC,OAAOH,MAAM,EAC1CvB,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAE3BI,EAAAA,EAAAA,KAACzB,EAAc,CAACgD,QAdD,WACnBhB,GAASiB,EAAAA,EAAAA,IAAoBC,OAAO9B,KACpCW,EAAS,EACX,EAW4CJ,SAAC,kBAI/C,EAEMwB,EAAa,SAAH7D,GAAsB,IAAhByC,EAAQzC,EAARyC,SACdC,GAAWC,EAAAA,EAAAA,MACTJ,GAAOY,EAAAA,EAAAA,MAAPZ,GACFuB,GAAeb,EAAAA,EAAAA,IAAYc,EAAAA,IAC3BC,GAAef,EAAAA,EAAAA,IAAYgB,EAAAA,IACjCC,GAAoCrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BvE,GAASqD,EAAAA,EAAAA,IAAYC,EAAAA,IACrBoB,GAAQrB,EAAAA,EAAAA,IAAYsB,EAAAA,IAC1BC,GAAkC3B,EAAAA,EAAAA,UAAS,IAAG4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0B/B,EAAAA,EAAAA,UAASgC,MAASC,OAAO,eAAcC,GAAAhC,EAAAA,EAAAA,GAAA6B,EAAA,GAA1DtB,EAAKyB,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAwBpC,EAAAA,EAAAA,UAASmB,GAAakB,GAAAnC,EAAAA,EAAAA,GAAAkC,EAAA,GAAvCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAAWC,EAAAA,EAAAA,MACjBC,GAA0B1C,EAAAA,EAAAA,UAAS,IAAG2C,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAEtBG,EAAAA,EAAAA,YAAU,WACRjD,GAASkD,EAAAA,EAAAA,IAAmBtC,GAC9B,GAAG,CAACA,KAEJqC,EAAAA,EAAAA,YAAU,YACHvB,GAAcN,IACjBO,GAAc,IACdwB,EAAAA,EAAAA,GAAM,CACJC,OAAQ,MACRC,QAAS,CACP,eAAgB,oDAElBC,iBAAiB,EACjBC,IAAI,wFAADC,OAA0F3D,EAAE,WAAA2D,OAAU5B,EAAK,UAAA4B,OAASpC,KAEtHqC,MAAK,SAACC,GAAS,IAADC,EACb1B,EAAgB,OAAHyB,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKE,YAAI,IAAAD,OAAN,EAAHA,EAAWC,KAAK5B,WAC7BL,GAAc,EAChB,IACCkC,OAAM,SAACC,GACNd,EAASe,KAAKC,UAAUF,GAC1B,IAEN,GAAG,CAAC1C,IAgBJ,OACEV,EAAAA,EAAAA,MAAC9D,EAAS,CAACM,OAAQA,EAAOyC,SAAA,EACxBF,EAAAA,EAAAA,KAACpC,EAAU,CAAAsC,SAAC,qCACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAIoD,KACJrC,EAAAA,EAAAA,MAAClD,EAAa,CAACG,UAAW,SAASgC,SAAA,EACjCF,EAAAA,EAAAA,KAACwE,EAAAA,GAAQ,CACPC,QAAS,IAAIC,KACbvD,MAAO,IAAIuD,KAAKvD,GAChBC,SAAU,SAACC,GAAC,OAAKwB,EAASH,IAAOrB,GAAGsB,OAAO,cAAc,IAGzDV,GA2BAjC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,KA1BP3E,EAAAA,EAAAA,KAACnB,EAAa,CAAAqB,SACXqC,EAAUpC,KAAI,SAAAlC,GAAoC,IAC7C2G,EADYC,EAAI5G,EAAJ4G,KAAMC,EAAM7G,EAAN6G,OAAQC,EAAW9G,EAAX8G,YAW9B,OAREH,EADEC,EAAO,IAAMC,EAAS,GACX,IAAAf,OAAOc,EAAI,KAAAd,OAAIe,EAAM,KACzBD,EAAO,GACH,IAAAd,OAAOc,EAAI,KAAAd,OAAIe,GACnBA,EAAS,GACL,GAAAf,OAAMc,EAAI,KAAAd,OAAIe,EAAM,KAEpB,GAAAf,OAAMc,EAAI,KAAAd,OAAIe,IAG3B9E,EAAAA,EAAAA,KAACjB,EAAW,CACVM,SACE,GAAA0E,OAAO,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,KAAI,KAAAd,OAAQ,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,UAAM,GAAAf,OAAUc,EAAI,KAAAd,OAAIe,GAEjDnG,SAAUoG,EACVxD,QAAS,kBA5CN,SAACyD,GAClB,IAAQH,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OACVR,KAAKC,UAAUS,KAAgBV,KAAKC,UAAUvB,KAChDzC,GAAS0E,EAAAA,EAAAA,IAAmBD,IAC5B/B,EAAQ,CAAE4B,KAAAA,EAAMC,OAAAA,IAEpB,CAsC+BI,CAAW,CAAEL,KAAAA,EAAMC,OAAAA,GAAS,EAAC5E,SAE3C0E,GAGP,UAMN3D,EAAAA,EAAAA,MAAClD,EAAa,CAAAmC,SAAA,EACZF,EAAAA,EAAAA,KAACzB,EAAc,CAACgD,QAhDG,WACvBhB,GAAS4E,EAAAA,EAAAA,OACT5E,GAAS6E,EAAAA,EAAAA,OACT9E,GAAU,EACZ,EA4CgDJ,SAAC,UAC3CF,EAAAA,EAAAA,KAACzB,EAAc,CACbgD,QAAS,kBAAM2B,EAAS,SAAS,EACjCvE,SACmB,OAAjBgD,GAA0C,OAAjBE,EAC1B3B,SACF,kBAMT,EAEA,EAxJ0B,WACxB,IAAAmF,GAAsD3E,EAAAA,EAAAA,UAAS,GAAE4E,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAA1DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAC5CG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAc,SAAC3H,GACnBsH,GAAuB,SAACM,GAAS,OAAKA,EAAY5H,CAAS,GAC7D,EAEA,OACE+C,EAAAA,EAAAA,MAAC8E,EAAAA,GAAe,CAAA7F,SAAA,CACW,IAAxBqF,IAA6BvF,EAAAA,EAAAA,KAACK,EAAW,CAACC,SAAUuF,IAC5B,IAAxBN,IAA6BvF,EAAAA,EAAAA,KAAC0B,EAAU,CAACpB,SAAUuF,MAG1D,C","sources":["components/restaurant-info/RestaurantPrompts.styles.js","components/select/Select.styles.js","components/select/Select.js","components/restaurant-info/RestaurantPrompts.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nimport { darkColor, greyColor, yellowColor } from \"../../utils/styles/styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: calc(100vh);\n  gap: 20px;\n  ${({ screen }) =>\n    screen === \"md\" &&\n    css`\n      ${PromptText} {\n        font-size: 44px;\n      }\n    `}\n  ${({ screen }) =>\n    screen === \"sm\" &&\n    css`\n      ${PromptText} {\n        font-size: 34px;\n      }\n    `}\n`;\n\nexport const InlineWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  align-items: center;\n  justify-content: space-between;\n  ${({ direction }) =>\n    direction &&\n    css`\n      flex-direction: ${direction};\n      align-items: flex-start;\n      justify-content: space-between;\n    `}\n`;\n\nexport const PromptText = styled.h1`\n  color: ${darkColor};\n  font-size: 54px;\n  max-width: 20ch;\n`;\n\nexport const ContinueButton = styled.button`\n  height: 35px;\n  width: 120px;\n  border-radius: 10px;\n  border: 1px solid ${darkColor};\n  background: #fff;\n  color: ${darkColor};\n  font-weight: 600;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 250ms ease-in;\n  &:hover {\n    background-color: ${darkColor};\n    color: #fff;\n  }\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      cursor: unset;\n      opacity: 0.75;\n      &:hover {\n        color: ${darkColor};\n        background: #fff;\n      }\n    `}\n`;\n\nexport const TimeContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 10px;\n`;\n\nexport const TimeContent = styled.button`\n  width: 80px;\n  height: 35px;\n  border-radius: 10px;\n  background-color: #fff;\n  cursor: pointer;\n  border: 1px solid ${darkColor};\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      background-color: ${greyColor};\n      border: none;\n      opacity: 50%;\n      cursor: unset;\n      color: #fff;\n    `}\n  ${({ selected }) =>\n    selected &&\n    css`\n      background-color: ${yellowColor};\n      border: none;\n    `}\n`;\n","import styled from \"styled-components\";\n\nimport { yellowColor, darkColor } from \"../../utils/styles/styles\";\n\nexport const SelectField = styled.select`\n  width: 120px;\n  border: 1px solid ${yellowColor};\n  height: 35px;\n  outline: none;\n  color: ${darkColor};\n  font-size: 16px;\n  border-radius: 10px;\n  padding: 0 10px;\n`;\n\nexport const Option = styled.option``;\n","import React from \"react\";\n\nimport { SelectField, Option } from \"./Select.styles\";\n\nfunction Select({ options, ...restProps }) {\n  return (\n    <SelectField {...restProps}>\n      {options.map((option, id) => (\n        <Option key={id}>{option}</Option>\n      ))}\n    </SelectField>\n  );\n}\n\nexport default Select;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  ContinueButton,\n  TimeContainer,\n  TimeContent,\n  InlineWrapper,\n  PromptText,\n} from \"./RestaurantPrompts.styles\";\n\nimport axios from \"axios\";\n\nimport Loader from \"../loader/Loader\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectScreen } from \"../../redux/reducers/ui/ui.selectors\";\n\nimport moment from \"moment\";\n\nimport {\n  setReservationDate,\n  setReservationHour,\n  setReservationSeats,\n  clearReservationHour,\n  clearReservationDate,\n} from \"../../redux/reducers/reservation/reservation.actions\";\n\nimport {\n  selectDate,\n  selectHour,\n  selectSeats,\n} from \"../../redux/reducers/reservation/reservation.selectors\";\n\nimport { useLocation } from \"react-router-dom\";\n\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\nimport { LayoutContainer } from \"../../utils/styles/styles\";\n\nimport Select from \"../select/Select\";\n\nconst RestaurantPrompts = () => {\n  const [currentPromptWindow, setCurrentPromptWindow] = useState(1);\n  const location = useLocation();\n  console.log(location);\n\n  const setNewState = (direction) => {\n    setCurrentPromptWindow((prevState) => prevState + direction);\n  };\n\n  return (\n    <LayoutContainer>\n      {currentPromptWindow === 1 && <SeatsPrompt setState={setNewState} />}\n      {currentPromptWindow === 2 && <TimePrompt setState={setNewState} />}\n    </LayoutContainer>\n  );\n};\n\nconst SeatsPrompt = ({ setState }) => {\n  const dispatch = useDispatch();\n  const [option, setOption] = useState(1);\n  const screen = useSelector(selectScreen);\n  const { id } = useParams();\n\n  const handleButton = () => {\n    dispatch(setReservationSeats(Number(option)));\n    setState(1);\n  };\n\n  return (\n    <Container screen={screen}>\n      <PromptText>How many of you are willing to be served?</PromptText>\n      <InlineWrapper>\n        <Select\n          value={option}\n          onChange={(e) => setOption(e.target.value)}\n          options={[1, 2, 3, 4, 5, 6]}\n        />\n        <ContinueButton onClick={handleButton}>Continue</ContinueButton>\n      </InlineWrapper>\n    </Container>\n  );\n};\n\nconst TimePrompt = ({ setState }) => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const selectedDate = useSelector(selectDate);\n  const selectedHour = useSelector(selectHour);\n  const [isFetching, setIsFetching] = useState(false);\n  const screen = useSelector(selectScreen);\n  const seats = useSelector(selectSeats);\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [value, setValue] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [time, setTime] = useState(selectedHour);\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(setReservationDate(value));\n  }, [value]);\n\n  useEffect(() => {\n    if (!isFetching && selectedDate) {\n      setIsFetching(true);\n      axios({\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n        },\n        withCredentials: false,\n        url: `https://us-central1-restoresa-65368.cloudfunctions.net/getTablesByPrompts?restaurant=${id}&seats=${seats}&date=${selectedDate}`,\n      })\n        .then((res) => {\n          setTimeSlots(res?.data?.data.timeSlots);\n          setIsFetching(false);\n        })\n        .catch((err) => {\n          setError(JSON.stringify(err));\n        });\n    }\n  }, [selectedDate]);\n\n  const handleHour = (pickedTime) => {\n    const { hour, minute } = pickedTime;\n    if (JSON.stringify(pickedTime) !== JSON.stringify(time)) {\n      dispatch(setReservationHour(pickedTime));\n      setTime({ hour, minute });\n    }\n  };\n\n  const handleButtonBack = () => {\n    dispatch(clearReservationHour());\n    dispatch(clearReservationDate());\n    setState(-1);\n  };\n\n  return (\n    <Container screen={screen}>\n      <PromptText>Which day and hour is suitable?</PromptText>\n      <p>{error}</p>\n      <InlineWrapper direction={\"column\"}>\n        <Calendar\n          minDate={new Date()}\n          value={new Date(value)}\n          onChange={(e) => setValue(moment(e).format(\"YYYY-MM-DD\"))}\n        />\n\n        {!isFetching ? (\n          <TimeContainer>\n            {timeSlots.map(({ hour, minute, isAllocated }) => {\n              let formattedTime;\n              if (hour < 10 && minute < 10) {\n                formattedTime = `0${hour}:${minute}0`;\n              } else if (hour < 10) {\n                formattedTime = `0${hour}:${minute}`;\n              } else if (minute < 10) {\n                formattedTime = `${hour}:${minute}0`;\n              } else {\n                formattedTime = `${hour}:${minute}`;\n              }\n              return (\n                <TimeContent\n                  selected={\n                    `${time?.hour}:${time?.minute}` === `${hour}:${minute}`\n                  }\n                  disabled={isAllocated}\n                  onClick={() => handleHour({ hour, minute })}\n                >\n                  {formattedTime}\n                </TimeContent>\n              );\n            })}\n          </TimeContainer>\n        ) : (\n          <Loader />\n        )}\n      </InlineWrapper>\n      <InlineWrapper>\n        <ContinueButton onClick={handleButtonBack}>Back</ContinueButton>\n        <ContinueButton\n          onClick={() => navigate(\"./food\")}\n          disabled={\n            selectedDate === null || selectedHour === null ? true : false\n          }\n        >\n          Continue\n        </ContinueButton>\n      </InlineWrapper>\n    </Container>\n  );\n};\n\nexport default RestaurantPrompts;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_ref","screen","css","_templateObject2","PromptText","_ref2","_templateObject3","InlineWrapper","_templateObject4","_ref3","direction","_templateObject5","h1","_templateObject6","darkColor","ContinueButton","button","_templateObject7","_ref4","disabled","_templateObject8","TimeContainer","_templateObject9","TimeContent","_templateObject10","_ref5","_templateObject11","greyColor","_ref6","selected","_templateObject12","yellowColor","SelectField","select","Option","option","options","restProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","children","map","id","SeatsPrompt","setState","dispatch","useDispatch","_useState3","useState","_useState4","_slicedToArray","setOption","useSelector","selectScreen","useParams","_jsxs","Select","value","onChange","e","target","onClick","setReservationSeats","Number","TimePrompt","selectedDate","selectDate","selectedHour","selectHour","_useState5","_useState6","isFetching","setIsFetching","seats","selectSeats","_useState7","_useState8","timeSlots","setTimeSlots","_useState9","moment","format","_useState10","setValue","_useState11","_useState12","time","setTime","navigate","useNavigate","_useState13","_useState14","error","setError","useEffect","setReservationDate","axios","method","headers","withCredentials","url","concat","then","res","_res$data","data","catch","err","JSON","stringify","Calendar","minDate","Date","Loader","formattedTime","hour","minute","isAllocated","pickedTime","setReservationHour","handleHour","clearReservationHour","clearReservationDate","_useState","_useState2","currentPromptWindow","setCurrentPromptWindow","location","useLocation","console","log","setNewState","prevState","LayoutContainer"],"sourceRoot":""}