{"version":3,"file":"static/js/354.85f1ed58.chunk.js","mappings":"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","sources":["components/payment-progress/Progress.js","components/payment-progress/Progress.styles.js","utils/firebase/resevation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  SectionTitle,\n  LayoutContainer,\n  PrimaryButton,\n} from \"../../utils/styles/styles\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport {\n  ElementContainer,\n  Title,\n  DarkenText,\n  Column,\n  StatusContainer,\n} from \"./Progress.styles\";\nimport { useStripe, Elements } from \"@stripe/react-stripe-js\";\nimport Loader from \"../loader/Loader\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearReservationData } from \"../../redux/reducers/reservation/reservation.actions\";\n\nimport { selectCurrentUser } from \"../../redux/reducers/user/user.selectors\";\n\nimport { selectReservation } from \"../../redux/reducers/reservation/reservation.selectors\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport Config from \"../../config\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nimport { useScreen } from \"../../utils/ui/useScreen\";\n\nimport moment from \"moment\";\nimport { sendOrderToDatabase } from \"../../utils/firebase/resevation\";\n\nconst stripePromise = loadStripe(Config.StripePublishableKey);\n\nconst ProgressContainer = ({ secret }) => {\n  const stripe = useStripe();\n  const navigate = useNavigate();\n  const screen = useScreen();\n  const dispatch = useDispatch();\n  const user = useSelector(selectCurrentUser);\n  const [isFetched, setIsFetched] = useState(false);\n  const [isSent, setIsSent] = useState(false);\n  const reservation = useSelector(selectReservation);\n  const [intent, setIntent] = useState(null);\n  const [paymentProgress, setPaymentProgress] = useState({\n    state: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    if (!stripe) return;\n\n    if (secret && !isFetched && user) {\n      setIsFetched(true);\n      stripe\n        .retrievePaymentIntent(secret)\n        .then(({ paymentIntent }) => {\n          setIntent(paymentIntent);\n          switch (paymentIntent.status) {\n            case \"processing\":\n              setPaymentProgress({\n                state: \"Processing\",\n                message: \"Wohoo! Payment received.\",\n              });\n              break;\n            case \"succeeded\":\n              setPaymentProgress({\n                state: \"Success\",\n                message: \"Payment processing.\",\n              });\n              break;\n            case \"requires_payment_method\":\n              setPaymentProgress({\n                state: \"Failed\",\n                message: \"Payment failes. Please try another payment method\",\n              });\n              break;\n            default:\n              setPaymentProgress({\n                state: \"Unpaid\",\n                message: \"Something went wrong. Please try again later.\",\n              });\n          }\n        })\n        .then(() => {});\n    }\n  }, [stripe, user]);\n\n  useEffect(() => {\n    let timeout;\n    if (paymentProgress.state !== \"\" && !isSent) {\n      timeout = setTimeout(() => {\n        sendOrderToDatabase(\n          user.uid,\n          {\n            ...reservation,\n            id: uuidv4(),\n          },\n          { id: intent.id, status: intent.status, secret: intent.client_secret }\n        );\n        dispatch(clearReservationData());\n        setIsSent(true);\n      }, 1500);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [paymentProgress]);\n\n  if (!secret) return;\n\n  return (\n    <>\n      <SectionTitle>Progress Information</SectionTitle>\n      <ElementContainer screen={screen} style={{ minHeight: \"120px\" }}>\n        <Column>\n          <Title>Status</Title>\n          <DarkenText>{paymentProgress.state}</DarkenText>\n        </Column>\n        <Column>\n          <Title>Transaction ID</Title>\n          <DarkenText>BX1578454AS</DarkenText>\n        </Column>\n        <Column>\n          <Title>Payment issued</Title>\n          <DarkenText> {moment().format(\"MMM Do YYYY, h:mm a\")}</DarkenText>\n        </Column>\n        {paymentProgress.state !== \"Success\" && (\n          <Column justify={\"center\"}>\n            <Loader />\n          </Column>\n        )}\n        <PrimaryButton onClick={() => navigate(\"/\")}>\n          Back to Homepage\n        </PrimaryButton>\n      </ElementContainer>\n    </>\n  );\n};\n\nconst Progress = () => {\n  const screen = useScreen();\n  const clientSecret = new URLSearchParams(window.location.search).get(\n    \"payment_intent_client_secret\"\n  );\n\n  return (\n    <>\n      {!clientSecret ? (\n        <ProgressContainer secret={clientSecret} />\n      ) : (\n        <LayoutContainer screen={screen}>\n          <StatusContainer>\n            <Elements stripe={stripePromise} options={{ clientSecret }}>\n              <ProgressContainer secret={clientSecret} />\n            </Elements>\n          </StatusContainer>\n        </LayoutContainer>\n      )}\n    </>\n  );\n};\n\nexport default Progress;\n","import styled, { css } from \"styled-components\";\nimport { DescriptionText, darkColor } from \"../../utils/styles/styles\";\n\nexport const StatusContainer = styled.div`\n  margin-top: 100px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ElementContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  min-height: 160px;\n  flex-direction: row;\n  align-items: space-between;\n  justify-content: flex-start;\n  background-color: #fbf6f6;\n  padding: ${({ padding }) => padding || \"10px\"};\n  width: 100%;\n  border-radius: 10px;\n  padding: 15px 25px;\n  gap: 25px;\n  ${({ screen }) =>\n    (screen === \"sm\" || screen === \"xs\") &&\n    css`\n      grid-template-columns: 1fr 1fr;\n      ${Title} {\n        font-size: 12px;\n      }\n      ${DarkenText} {\n        font-size: 13px;\n      }\n    `}\n`;\n\nexport const Title = styled(DescriptionText)`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const DarkenText = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  color: ${darkColor};\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${({ justify }) => justify || \"flex-start\"};\n`;\n","import {\n  collection,\n  query,\n  where,\n  onSnapshot,\n  getDocs,\n  getDoc,\n  doc,\n  setDoc,\n  Timestamp,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\nexport const sendPaymentToDatabase = async (userID, paymentDetails) => {\n  const usersRef = collection(db, \"users\");\n  const userRef = doc(db, \"users\", userID);\n  const userSnap = await getDoc(userRef);\n  if (userSnap.exists()) {\n    const { payments } = userSnap.data();\n    await setDoc(doc(usersRef, userID), {\n      ...userSnap.data(),\n      payments: [...payments, paymentDetails],\n    });\n  } else {\n    await setDoc(doc(usersRef, userID), {\n      ...userSnap.data(),\n      payments: [paymentDetails],\n    });\n  }\n};\n\nexport const sendOrderToDatabase = async (userID, order, intent) => {\n  const usersRef = collection(db, \"users\");\n  const userRef = doc(db, \"users\", userID);\n  const userSnap = await getDoc(userRef);\n  order = {\n    ...order,\n    createdAt: Timestamp.fromDate(new Date()),\n    payment: intent,\n  };\n  if (userSnap.exists()) {\n    const { orders } = userSnap.data();\n    await setDoc(doc(usersRef, userID), {\n      ...userSnap.data(),\n      orders: [...orders, order],\n    });\n  } else {\n    await setDoc(doc(usersRef, userID), {\n      ...userSnap.data(),\n      orders: [order],\n    });\n  }\n};\n\nexport const getAllUserOrders = (userID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const userRef = doc(db, \"users\", userID);\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        const { orders } = userSnap.data();\n        resolve(orders);\n      } else {\n        resolve([]);\n      }\n    } catch (error) {\n      reject(error.message);\n    }\n  });\n};\n\nexport const getOrderByID = (userID, orderID) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const userRef = doc(db, \"users\", userID);\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        const { orders } = userSnap.data();\n        const order = orders.find((order) => order.id === orderID);\n        resolve(order);\n      } else {\n        resolve([]);\n      }\n    } catch (error) {\n      reject(error.message);\n    }\n  });\n};\n"],"names":["stripePromise","loadStripe","Config","StripePublishableKey","ProgressContainer","_ref","secret","stripe","useStripe","navigate","useNavigate","screen","useScreen","dispatch","useDispatch","user","useSelector","selectCurrentUser","_useState","useState","_useState2","_slicedToArray","isFetched","setIsFetched","_useState3","_useState4","isSent","setIsSent","reservation","selectReservation","_useState5","_useState6","intent","setIntent","_useState7","state","message","_useState8","paymentProgress","setPaymentProgress","useEffect","retrievePaymentIntent","then","_ref2","paymentIntent","status","timeout","setTimeout","sendOrderToDatabase","uid","_objectSpread","id","uuidv4","client_secret","clearReservationData","clearTimeout","_jsxs","_Fragment","children","_jsx","SectionTitle","ElementContainer","style","minHeight","Column","Title","DarkenText","moment","format","justify","Loader","PrimaryButton","onClick","clientSecret","URLSearchParams","window","location","search","get","LayoutContainer","StatusContainer","Elements","options","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","padding","css","_templateObject4","DescriptionText","_templateObject5","p","_templateObject6","darkColor","_templateObject7","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","userID","order","usersRef","userRef","userSnap","_userSnap$data2","orders","wrap","_context2","prev","next","collection","db","doc","getDoc","sent","createdAt","Timestamp","fromDate","Date","payment","exists","data","setDoc","concat","_toConsumableArray","stop","_x3","_x4","_x5","apply","arguments","getAllUserOrders","Promise","_callee3","resolve","reject","_userSnap$data3","_context3","t0","_x6","_x7","getOrderByID","orderID","_ref4","_callee4","_userSnap$data4","_context4","find","_x8","_x9"],"sourceRoot":""}